{"ast":null,"code":"import { firestore, convertCollectionsSnapshotToMap } from 'firebase/firebase.utils';\nimport ShopActionTypes from './shop.types';\nexport const fetchCollectionsStart = collectionsMap => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_START,\n  payload: collectionsMap\n});\nexport const fetchCollectionsSuccess = collectionsMap => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_SUCCESS,\n  payload: collectionsMap\n});\nexport const fetchCollectionsFailure = errorMessage => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_FAILURE,\n  payload: errorMessage\n});\nexport const fetchCollectionsStartAsync = () => {\n  return dispatch => {\n    const collectionRef = firestore.collection('collections');\n    dispatch(fetchCollectionsStart());\n    collectionRef.onSnapshot(async snapshot => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n      dispatch(fetchCollectionsSuccess(collectionsMap));\n    }).catch(error => dispatch(fetchCollectionsFailure));\n  };\n};","map":{"version":3,"sources":["/Users/serdarmustafa/react-ecommerce/src/redux/shop/shop.actions.js"],"names":["firestore","convertCollectionsSnapshotToMap","ShopActionTypes","fetchCollectionsStart","collectionsMap","type","FETCH_COLLECTIONS_START","payload","fetchCollectionsSuccess","FETCH_COLLECTIONS_SUCCESS","fetchCollectionsFailure","errorMessage","FETCH_COLLECTIONS_FAILURE","fetchCollectionsStartAsync","dispatch","collectionRef","collection","onSnapshot","snapshot","catch","error"],"mappings":"AAAA,SACEA,SADF,EAEEC,+BAFF,QAGO,yBAHP;AAKA,OAAOC,eAAP,MAA4B,cAA5B;AAEA,OAAO,MAAMC,qBAAqB,GAAGC,cAAc,KAAK;AACtDC,EAAAA,IAAI,EAAEH,eAAe,CAACI,uBADgC;AAEtDC,EAAAA,OAAO,EAAEH;AAF6C,CAAL,CAA5C;AAKP,OAAO,MAAMI,uBAAuB,GAAGJ,cAAc,KAAK;AACxDC,EAAAA,IAAI,EAAEH,eAAe,CAACO,yBADkC;AAExDF,EAAAA,OAAO,EAAEH;AAF+C,CAAL,CAA9C;AAKP,OAAO,MAAMM,uBAAuB,GAAGC,YAAY,KAAK;AACtDN,EAAAA,IAAI,EAAEH,eAAe,CAACU,yBADgC;AAEtDL,EAAAA,OAAO,EAAEI;AAF6C,CAAL,CAA5C;AAKP,OAAO,MAAME,0BAA0B,GAAG,MAAM;AAC9C,SAAOC,QAAQ,IAAI;AACjB,UAAMC,aAAa,GAAGf,SAAS,CAACgB,UAAV,CAAqB,aAArB,CAAtB;AACAF,IAAAA,QAAQ,CAACX,qBAAqB,EAAtB,CAAR;AACAY,IAAAA,aAAa,CACVE,UADH,CACc,MAAMC,QAAN,IAAkB;AAC5B,YAAMd,cAAc,GAAGH,+BAA+B,CAACiB,QAAD,CAAtD;AACAJ,MAAAA,QAAQ,CAACN,uBAAuB,CAACJ,cAAD,CAAxB,CAAR;AACD,KAJH,EAKGe,KALH,CAKSC,KAAK,IAAIN,QAAQ,CAACJ,uBAAD,CAL1B;AAMD,GATD;AAUD,CAXM","sourcesContent":["import {\n  firestore,\n  convertCollectionsSnapshotToMap,\n} from 'firebase/firebase.utils';\n\nimport ShopActionTypes from './shop.types';\n\nexport const fetchCollectionsStart = collectionsMap => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_START,\n  payload: collectionsMap,\n});\n\nexport const fetchCollectionsSuccess = collectionsMap => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_SUCCESS,\n  payload: collectionsMap,\n});\n\nexport const fetchCollectionsFailure = errorMessage => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_FAILURE,\n  payload: errorMessage,\n});\n\nexport const fetchCollectionsStartAsync = () => {\n  return dispatch => {\n    const collectionRef = firestore.collection('collections');\n    dispatch(fetchCollectionsStart());\n    collectionRef\n      .onSnapshot(async snapshot => {\n        const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n        dispatch(fetchCollectionsSuccess(collectionsMap));\n      })\n      .catch(error => dispatch(fetchCollectionsFailure));\n  };\n};\n"]},"metadata":{},"sourceType":"module"}