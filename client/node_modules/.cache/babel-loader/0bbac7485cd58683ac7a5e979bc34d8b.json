{"ast":null,"code":"var _jsxFileName = \"/Users/serdarmustafa/react-ecommerce/src/pages/ShopPage/ShopPage.js\";\nimport React, { Component } from 'react';\nimport { Route } from 'react-router-dom';\nimport { createStructuredSelector } from 'reselect';\nimport { connect } from 'react-redux';\nimport WithSpinner from 'components/WithSpinner/WithSpinnerComponent';\nimport CollectionPage from '../Collection/CollectionPage';\nimport CollectionsOverview from 'components/CollectionsOverview/CollectionsOverviewContainer';\nimport { fetchCollectionsStartAsync } from 'redux/shop/shop.actions';\nimport { selectIsCollectionFetching, selectIsCollectionsLoaded } from 'redux/shop/shop.selectors';\nconst CollectionsOverviewContainer = WithSpinner(CollectionsOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nclass ShopPage extends Component {\n  componentDidMount() {\n    const fetchCollectionsStartAsync = this.props.fetchCollectionsStartAsync;\n    fetchCollectionsStartAsync();\n  }\n\n  render() {\n    const _this$props = this.props,\n          match = _this$props.match,\n          isCollectionsLoaded = _this$props.isCollectionsLoaded;\n    return React.createElement(\"div\", {\n      className: \"shop-page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: `${match.path}`,\n      component: CollectionsOverviewContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: `${match.path}/:collectionId`,\n      render: props => React.createElement(CollectionPageWithSpinner, Object.assign({\n        isLoading: !isCollectionsLoaded\n      }, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = createStructuredSelector({\n  isCollectionsLoaded: selectIsCollectionsLoaded\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync)\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["/Users/serdarmustafa/react-ecommerce/src/pages/ShopPage/ShopPage.js"],"names":["React","Component","Route","createStructuredSelector","connect","WithSpinner","CollectionPage","CollectionsOverview","fetchCollectionsStartAsync","selectIsCollectionFetching","selectIsCollectionsLoaded","CollectionsOverviewContainer","CollectionPageWithSpinner","ShopPage","componentDidMount","props","render","match","isCollectionsLoaded","path","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,WAAP,MAAwB,6CAAxB;AACA,OAAOC,cAAP,MAA2B,8BAA3B;AACA,OAAOC,mBAAP,MAAgC,6DAAhC;AAEA,SAASC,0BAAT,QAA2C,yBAA3C;AACA,SACEC,0BADF,EAEEC,yBAFF,QAGO,2BAHP;AAKA,MAAMC,4BAA4B,GAAGN,WAAW,CAACE,mBAAD,CAAhD;AACA,MAAMK,yBAAyB,GAAGP,WAAW,CAACC,cAAD,CAA7C;;AAEA,MAAMO,QAAN,SAAuBZ,SAAvB,CAAiC;AAC/Ba,EAAAA,iBAAiB,GAAG;AAAA,UACVN,0BADU,GACqB,KAAKO,KAD1B,CACVP,0BADU;AAElBA,IAAAA,0BAA0B;AAC3B;;AAEDQ,EAAAA,MAAM,GAAG;AAAA,wBACgC,KAAKD,KADrC;AAAA,UACCE,KADD,eACCA,KADD;AAAA,UACQC,mBADR,eACQA,mBADR;AAGP,WACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AACE,MAAA,KAAK,MADP;AAEE,MAAA,IAAI,EAAG,GAAED,KAAK,CAACE,IAAK,EAFtB;AAGE,MAAA,SAAS,EAAER,4BAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAOE,oBAAC,KAAD;AACE,MAAA,IAAI,EAAG,GAAEM,KAAK,CAACE,IAAK,gBADtB;AAEE,MAAA,MAAM,EAAEJ,KAAK,IACX,oBAAC,yBAAD;AACE,QAAA,SAAS,EAAE,CAACG;AADd,SAEMH,KAFN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPF,CADF;AAmBD;;AA5B8B;;AA+BjC,MAAMK,eAAe,GAAGjB,wBAAwB,CAAC;AAC/Ce,EAAAA,mBAAmB,EAAER;AAD0B,CAAD,CAAhD;;AAIA,MAAMW,kBAAkB,GAAGC,QAAQ,KAAK;AACtCd,EAAAA,0BAA0B,EAAE,MAAMc,QAAQ,CAACd,0BAAD;AADJ,CAAL,CAAnC;;AAIA,eAAeJ,OAAO,CAACgB,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CR,QAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Route } from 'react-router-dom';\nimport { createStructuredSelector } from 'reselect';\nimport { connect } from 'react-redux';\n\nimport WithSpinner from 'components/WithSpinner/WithSpinnerComponent';\nimport CollectionPage from '../Collection/CollectionPage';\nimport CollectionsOverview from 'components/CollectionsOverview/CollectionsOverviewContainer';\n\nimport { fetchCollectionsStartAsync } from 'redux/shop/shop.actions';\nimport {\n  selectIsCollectionFetching,\n  selectIsCollectionsLoaded,\n} from 'redux/shop/shop.selectors';\n\nconst CollectionsOverviewContainer = WithSpinner(CollectionsOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nclass ShopPage extends Component {\n  componentDidMount() {\n    const { fetchCollectionsStartAsync } = this.props;\n    fetchCollectionsStartAsync();\n  }\n\n  render() {\n    const { match, isCollectionsLoaded } = this.props;\n\n    return (\n      <div className=\"shop-page\">\n        <Route\n          exact\n          path={`${match.path}`}\n          component={CollectionsOverviewContainer}\n        />\n\n        <Route\n          path={`${match.path}/:collectionId`}\n          render={props => (\n            <CollectionPageWithSpinner\n              isLoading={!isCollectionsLoaded}\n              {...props}\n            />\n          )}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = createStructuredSelector({\n  isCollectionsLoaded: selectIsCollectionsLoaded,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);\n"]},"metadata":{},"sourceType":"module"}