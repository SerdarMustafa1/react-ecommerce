{"ast":null,"code":"import { takeEvery } from 'redux-saga/effects';\nimport { firestore, convertCollectionsSnapshotToMap } from 'firebase/firebase.utils';\nimport { fetchCollectionsSuccess, fetchCollectionsFailure } from './shop.actions';\nimport ShopActionTypes from './shop.types';\nexport function* fetchCollectionsAsync() {\n  yield console.log('testing');\n  const collectionRef = firestore.collection('collections');\n  const snapshot = yield collectionRef.get();\n  collectionRef.get().then(snapshot => {\n    const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n    dispatch(fetchCollectionsSuccess(collectionsMap));\n  }).catch(error => dispatch(fetchCollectionsFailure(error.message)));\n}\nexport function* fetchCollectionsStart() {\n  yield takeEvery(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync());\n}","map":{"version":3,"sources":["/Users/serdarmustafa/react-ecommerce/src/redux/shop/shop.sagas.js"],"names":["takeEvery","firestore","convertCollectionsSnapshotToMap","fetchCollectionsSuccess","fetchCollectionsFailure","ShopActionTypes","fetchCollectionsAsync","console","log","collectionRef","collection","snapshot","get","then","collectionsMap","dispatch","catch","error","message","fetchCollectionsStart","FETCH_COLLECTIONS_START"],"mappings":"AAAA,SAASA,SAAT,QAA0B,oBAA1B;AAEA,SACEC,SADF,EAEEC,+BAFF,QAGO,yBAHP;AAKA,SACEC,uBADF,EAEEC,uBAFF,QAGO,gBAHP;AAKA,OAAOC,eAAP,MAA4B,cAA5B;AAEA,OAAO,UAAUC,qBAAV,GAAkC;AACvC,QAAMC,OAAO,CAACC,GAAR,CAAY,SAAZ,CAAN;AAEA,QAAMC,aAAa,GAAGR,SAAS,CAACS,UAAV,CAAqB,aAArB,CAAtB;AACA,QAAMC,QAAQ,GAAG,MAAMF,aAAa,CAACG,GAAd,EAAvB;AAEAH,EAAAA,aAAa,CACVG,GADH,GAEGC,IAFH,CAEQF,QAAQ,IAAI;AAChB,UAAMG,cAAc,GAAGZ,+BAA+B,CAACS,QAAD,CAAtD;AACAI,IAAAA,QAAQ,CAACZ,uBAAuB,CAACW,cAAD,CAAxB,CAAR;AACD,GALH,EAMGE,KANH,CAMSC,KAAK,IAAIF,QAAQ,CAACX,uBAAuB,CAACa,KAAK,CAACC,OAAP,CAAxB,CAN1B;AAOD;AAED,OAAO,UAAUC,qBAAV,GAAkC;AACvC,QAAMnB,SAAS,CACbK,eAAe,CAACe,uBADH,EAEbd,qBAAqB,EAFR,CAAf;AAID","sourcesContent":["import { takeEvery } from 'redux-saga/effects';\n\nimport {\n  firestore,\n  convertCollectionsSnapshotToMap,\n} from 'firebase/firebase.utils';\n\nimport {\n  fetchCollectionsSuccess,\n  fetchCollectionsFailure,\n} from './shop.actions';\n\nimport ShopActionTypes from './shop.types';\n\nexport function* fetchCollectionsAsync() {\n  yield console.log('testing');\n\n  const collectionRef = firestore.collection('collections');\n  const snapshot = yield collectionRef.get();\n\n  collectionRef\n    .get()\n    .then(snapshot => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n      dispatch(fetchCollectionsSuccess(collectionsMap));\n    })\n    .catch(error => dispatch(fetchCollectionsFailure(error.message)));\n}\n\nexport function* fetchCollectionsStart() {\n  yield takeEvery(\n    ShopActionTypes.FETCH_COLLECTIONS_START,\n    fetchCollectionsAsync(),\n  );\n}\n"]},"metadata":{},"sourceType":"module"}